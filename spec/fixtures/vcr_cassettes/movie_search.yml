---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=DONT_SHARE_MY_PROPUBLIC_SECRET_KEY&include_adult=false&language=en-US&page=1&query=Twisters
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.10.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 22 Aug 2024 17:54:37 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=8905
      X-Memc:
      - HIT
      X-Memc-Key:
      - b8f87acc07b6770b03ff5702f7351264
      X-Memc-Age:
      - '17123'
      X-Memc-Expires:
      - '8905'
      Etag:
      - W/"efc5dce52f02be858c6f62fd08ef8512"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 78d82ac849fe1d87e48659ba126792fe.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - f4uRpWROxhX9_mYgIPVH0FNVX4_5VarTDxGilWjWuCwz1Eq7eSdeQw==
      Age:
      - '5572'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 22 Aug 2024 19:27:29 GMT
recorded_with: VCR 6.3.1
